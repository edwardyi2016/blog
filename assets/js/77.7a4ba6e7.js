(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{264:function(t,_,v){"use strict";v.r(_);var e=v(0),a=Object(e.a)({},function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("div",{staticClass:"content"},[t._m(0),t._v(" "),v("blockquote",[v("p",[t._v("引用自"),v("a",{attrs:{href:"http://www.runoob.com/java/java-basic-datatypes.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java 基本数据类型"),v("OutboundLink")],1)])]),t._v(" "),v("p",[t._v("变量就是申请内存来储存值。当创建变量得时候，需要在内存中申请空间。内存管理系统根据变量的类型为其分配存储空间，分配的空间只能用来储存该类型数据。")]),t._v(" "),v("p",[t._v("Java中有两大数据类型：内置数据类型、引用数据类型。")]),t._v(" "),t._m(1),t._v(" "),v("p",[t._v("Java语言提供了八种基本类型。六种数字类型（四个整数型，两个浮点型），一种字符类型，还有一种布尔型。")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),v("p",[t._v("运算中，不同类型的数据先转化为同一类型，然后进行运算。")]),t._v(" "),t._m(15),t._v(" "),v("p",[t._v("数据类型转换必须满足如下规则：")]),t._v(" "),t._m(16),t._v(" "),v("p",[t._v("自动类型转换：必须满足转换前的数据类型的位数要低于转换后的数据类型。例如：short数据类型的位数为16位，就可以自动转换成位数为32的int类型，同样float数据类型的位数为32，可以自动转换为64位的double类型。")]),t._v(" "),v("p",[t._v("强制类型转换：1、转换的数据类型必须是兼容的；2、格式：(type) value。type是要强制转换类型后的目标数据类型。")]),t._v(" "),v("p",[t._v("隐性强制类型转换：1、整数的默认类型是int；2、浮点型不存在这种情况，因为在定义float类型时必须在数字后面跟上F或者f。")])])},[function(){var t=this.$createElement,_=this._self._c||t;return _("h1",{attrs:{id:"基本数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型","aria-hidden":"true"}},[this._v("#")]),this._v(" 基本数据类型")])},function(){var t=this.$createElement,_=this._self._c||t;return _("h2",{attrs:{id:"内置数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#内置数据类型","aria-hidden":"true"}},[this._v("#")]),this._v(" 内置数据类型")])},function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("table",[v("thead",[v("tr",[v("th",[t._v("类型")]),t._v(" "),v("th",[t._v("长度")]),t._v(" "),v("th",[t._v("最小值")]),t._v(" "),v("th",[t._v("最大值")]),t._v(" "),v("th",[t._v("默认值")]),t._v(" "),v("th",[t._v("示例")]),t._v(" "),v("th",[t._v("备注")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("byte")]),t._v(" "),v("td",[t._v("8位")]),t._v(" "),v("td",[t._v("-128（-2^7）")]),t._v(" "),v("td",[t._v("127（2^7 - 1）")]),t._v(" "),v("td",[t._v("0")]),t._v(" "),v("td",[t._v("byte a = 100, byte b = -50")]),t._v(" "),v("td",[t._v("byte 类型用在大型数组中节约空间，主要代替整数，因为 byte 变量占用的空间只有 int 类型的四分之一")])]),t._v(" "),v("tr",[v("td",[t._v("short")]),t._v(" "),v("td",[t._v("16位")]),t._v(" "),v("td",[t._v("-2^15")]),t._v(" "),v("td",[t._v("2^15 - 1")]),t._v(" "),v("td",[t._v("0")]),t._v(" "),v("td",[t._v("short s = 1000, short r = -20000")]),t._v(" "),v("td",[t._v("Short 数据类型也可以像 byte 那样节省空间，一个short变量是int型变量所占空间的二分之一")])]),t._v(" "),v("tr",[v("td",[t._v("int")]),t._v(" "),v("td",[t._v("32位")]),t._v(" "),v("td",[t._v("-2^31")]),t._v(" "),v("td",[t._v("2^31 - 1")]),t._v(" "),v("td",[t._v("0")]),t._v(" "),v("td",[t._v("int a = 100000, int b = -200000")]),t._v(" "),v("td",[t._v("一般地整型变量默认为 int 类型")])]),t._v(" "),v("tr",[v("td",[t._v("long")]),t._v(" "),v("td",[t._v("64位")]),t._v(" "),v("td",[t._v("-2^63")]),t._v(" "),v("td",[t._v("2^63 -1")]),t._v(" "),v("td",[t._v("0L")]),t._v(" "),v("td",[t._v("long a = 1000000L, long b = -2000000L")]),t._v(" "),v("td",[t._v("主要使用在需要比较大整数的系统上")])]),t._v(" "),v("tr",[v("td",[t._v("float")]),t._v(" "),v("td",[t._v("32位、单精度、符合IEEE 754标准的浮点数")]),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td",[t._v("0.0f")]),t._v(" "),v("td",[t._v("float f1 = 234.5f")]),t._v(" "),v("td",[t._v("float 在储存大型浮点数组的时候可节省内存空间，浮点数不能用来表示精确的值，如货币")])]),t._v(" "),v("tr",[v("td",[t._v("double")]),t._v(" "),v("td",[t._v("64位、双精度、符合IEEE 754标准的浮点数")]),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td",[t._v("0.0d")]),t._v(" "),v("td",[t._v("doble d1 = 123.4")]),t._v(" "),v("td",[t._v("浮点数的默认类型为double类型，double类型同样不能表示精确的值，如货币")])]),t._v(" "),v("tr",[v("td",[t._v("boolean")]),t._v(" "),v("td",[t._v("1位")]),t._v(" "),v("td"),t._v(" "),v("td"),t._v(" "),v("td",[t._v("false")]),t._v(" "),v("td",[t._v("boolean isReal = true")]),t._v(" "),v("td",[t._v("boolean类型只有两个取值：true 和 false；该类型只作为一种标志来记录 true/false 情况")])]),t._v(" "),v("tr",[v("td",[t._v("char")]),t._v(" "),v("td",[t._v("16位Unicode字符")]),t._v(" "),v("td",[t._v("\\u0000（0）")]),t._v(" "),v("td",[t._v("\\uffff（65,535）")]),t._v(" "),v("td",[t._v("无")]),t._v(" "),v("td",[t._v("char letter = 'A'")]),t._v(" "),v("td",[t._v("char 数据类型可以储存任何字符")])])])])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v('float和double的最小值和最大值都是以科学记数法的形式输出的，结尾的"E+数字"表示E之前的数字要乘以10的多少次方。比如3.14E3就是'),_("code",[this._v("3.14 × 10^3 = 3140")]),this._v("，3.14E-3 就是 "),_("code",[this._v("3.14 x 10^-3 = 0.00314")]),this._v("。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("实际上，Java中还存在一种基本类型void，它也有对应的包装类 "),_("code",[this._v("java.lang.Void")]),this._v("，不过我么无法直接对它们进行操作。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("h2",{attrs:{id:"引用类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#引用类型","aria-hidden":"true"}},[this._v("#")]),this._v(" 引用类型")])},function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ul",[v("li",[v("p",[t._v("Java中的引用类型变量非常类似于C/C++的指针。引用类型指向一个对象，指向对象的变量是引用变量。这些变量在声明时被指定为一个特定的类型，比如Employee、Puppy等。")])]),t._v(" "),v("li",[v("p",[t._v("对象、数组都是引用数据类型。")])]),t._v(" "),v("li",[v("p",[t._v("所有引用类型的默认值都是null。")])]),t._v(" "),v("li",[v("p",[t._v("一个引用变量可以用来引用任何与之兼容的类型。")])]),t._v(" "),v("li",[v("p",[t._v('示例：Site site = new Site("http://xxxx.com/")')])])])},function(){var t=this.$createElement,_=this._self._c||t;return _("h2",{attrs:{id:"java常量"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#java常量","aria-hidden":"true"}},[this._v("#")]),this._v(" Java常量")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("常量在程序运行时是不能被修改的。Java中使用 "),_("code",[this._v("final")]),this._v(" 关键字来修饰常量，声明方式和变量类似：")])},function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("div",{staticClass:"language-Java line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" PI "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14159")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])])},function(){var t=this.$createElement,_=this._self._c||t;return _("h2",{attrs:{id:"十进制、16进制、8进制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#十进制、16进制、8进制","aria-hidden":"true"}},[this._v("#")]),this._v(" 十进制、16进制、8进制")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("byte、int、long、short都可以用十进制、16进制和8进制的方式来表示。前缀 "),_("code",[this._v("0")]),this._v(" 表示8进制，前缀 "),_("code",[this._v("0x")]),this._v(" 表示16进制。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("h2",{attrs:{id:"转义字符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#转义字符","aria-hidden":"true"}},[this._v("#")]),this._v(" 转义字符")])},function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("table",[v("thead",[v("tr",[v("th",[t._v("符号")]),t._v(" "),v("th",[t._v("字符含义")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("\\n")]),t._v(" "),v("td",[t._v("换行（0x0a）")])]),t._v(" "),v("tr",[v("td",[t._v("\\r")]),t._v(" "),v("td",[t._v("回车（0x0d）")])]),t._v(" "),v("tr",[v("td",[t._v("\\f")]),t._v(" "),v("td",[t._v("换页符（0x0c）")])]),t._v(" "),v("tr",[v("td",[t._v("\\b")]),t._v(" "),v("td",[t._v("退格（0x08）")])]),t._v(" "),v("tr",[v("td",[t._v("\\0")]),t._v(" "),v("td",[t._v("空字符（0x20）")])]),t._v(" "),v("tr",[v("td",[t._v("\\s")]),t._v(" "),v("td",[t._v("字符串")])]),t._v(" "),v("tr",[v("td",[t._v("\\t")]),t._v(" "),v("td",[t._v("制表符")])]),t._v(" "),v("tr",[v("td",[t._v('\\"')]),t._v(" "),v("td",[t._v("双引号")])]),t._v(" "),v("tr",[v("td",[t._v("\\'")]),t._v(" "),v("td",[t._v("单引号")])]),t._v(" "),v("tr",[v("td",[t._v("\\\\")]),t._v(" "),v("td",[t._v("反斜杠")])]),t._v(" "),v("tr",[v("td",[t._v("\\ddd")]),t._v(" "),v("td",[t._v("八进制字符（ddd）")])]),t._v(" "),v("tr",[v("td",[t._v("\\uxxxx")]),t._v(" "),v("td",[t._v("16进制Unicode字符（xxxx）")])])])])},function(){var t=this.$createElement,_=this._self._c||t;return _("h2",{attrs:{id:"类型转换"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#类型转换","aria-hidden":"true"}},[this._v("#")]),this._v(" 类型转换")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("转换从低级到高级："),_("code",[this._v("byte, short, char -> int -> long -> float -> double")])])},function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ul",[v("li",[v("p",[t._v("不能对boolean类型进行类型转换。")])]),t._v(" "),v("li",[v("p",[t._v("不能把对象类型转换成不相关类的对象。")])]),t._v(" "),v("li",[v("p",[t._v("在把容量大的类型转换为容量小的类型时必须使用强制类型转换。")])]),t._v(" "),v("li",[v("p",[t._v("转换过程中可能导致溢出或者损失精度。")])]),t._v(" "),v("li",[v("p",[t._v("浮点数到整数的转换是通过舍弃小数得到，而不是四舍五入。")])])])}],!1,null,null,null);_.default=a.exports}}]);